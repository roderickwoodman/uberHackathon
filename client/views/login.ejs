<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>Uber API Starter Kit</title>

<script>
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
      getMyInfo();
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into Facebook.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  window.fbAsyncInit = function() {
  FB.init({
    appId      : '1590137581203915',
    cookie     : true,  // enable cookies to allow the server to access 
                        // the session
    xfbml      : true,  // parse social plugins on this page
    version    : 'v2.3' // use version 2.2
  });

  // Now that we've initialized the JavaScript SDK, we call 
  // FB.getLoginStatus().  This function gets the state of the
  // person visiting this page and can return one of three states to
  // the callback you provide.  They can be:
  //
  // 1. Logged into your app ('connected')
  // 2. Logged into Facebook, but not your app ('not_authorized')
  // 3. Not logged into Facebook and can't tell if they are logged into
  //    your app or not.
  //
  // These three cases are handled in the callback function.

  FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
  });

  };




  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
      console.log('Successful login for: ' + response.name);
      document.getElementById('status').innerHTML =
        'Thanks for logging in, ' + response.name + '!';
    });
  }

  var myInfo;

  function getMyInfo(){
  	console.log('getting my ingo');
  	FB.api(
  		"/me",
  		function (response) {
  			console.log(response);
  			myInfo = response;
  			getEvents();
  		});
  }

  function getEvents() {
  	console.log('running getEvents');
  	 FB.api(
  		"/"+myInfo.id+"/events",
  		function (response) {
  			console.log(response);
  			console.log("/"+myInfo.id+"/events")
  		});

  }
</script>

</head>
<body>


	<fb:login-button scope="public_profile,email,user_events" onlogin="checkLoginState();">
	</fb:login-button>

	<div id="status">
	</div>

	<h2>Events</h2>
	<div id='events'></div>

	<h2>Uber API Starter Kit</h2>
	<p>This is the Uber API Starter Kit. Click login to login using OAUTH</p>
	<p><a href="/auth/uber">Login</a></p>
  <div id='location'> 
  getting location...
  </div>
	<script type="text/javascript">

	var locationDiv = document.getElementById("location");

	if (navigator.geolocation) {
		navigator.geolocation.getCurrentPosition(showPosition);
	} else {
    var toSet = "";
		toSet = "Geolocation not supported input your own starting and ending coordinates below";
    toSet += "<form action='/cars' method='POST'>";
    toSet += "Starting Latitude:<input type='text' name='start_latitude'>";
    toSet += "Starting Longitude:<input type='text' name='start_longitude'>";
    toSet += "</form>";
    locationDiv.innerHTML = toSet;
	}

	function showPosition(position) {
    var toSet = "";
		toSet = "<p>Latitude: <strong>" + position.coords.latitude.toFixed(5) + "</strong>, Longitude: <strong>" + position.coords.longitude.toFixed(5) + "</strong>";
		toSet += "<form action='/cars' method='POST'>";
    toSet += "<input type='hidden' name='start_latitude' value='" + position.coords.latitude.toFixed(5) + "'>";
    toSet += "<input type='hidden' name='start_longitude' value='" + position.coords.longitude.toFixed(5) + "'>";
    toSet += "<input type='submit' value='Request Uber!'>"
    toSet += "</form>";
    locationDiv.innerHTML = toSet;
	}

	</script>
</body>
</html>
